{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAeC,SAASC,cAAc,aACtCC,EAAkBF,SAASC,cAAc,uBACzCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAE3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGbR,EAAae,iBAAiB,UAC9B,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOhB,EAAgBiB,OAC/BC,EAAYF,OAAOf,EAAUgB,OAC7BE,EAAcH,OAAOd,EAAYe,OACjCG,EAAW,EACfL,GAAgBG,EAChBrB,EAAawB,QACb,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EACpCF,EAAWE,EAAI,EACfP,GAASG,EACTf,EAAciB,EAAUL,GACrBQ,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBxB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst promisesForm = document.querySelector('form.form');\nconst firstDelayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\npromisesForm.addEventListener('submit', selectNumbers);\nfunction selectNumbers(event) {\n  event.preventDefault();\n  let delay = Number(firstDelayInput.value);\n  let delayStep = Number(stepInput.value);\n  let amountValue = Number(amountInput.value);\n  let position = 0;\n  delay = delay - delayStep;\n  promisesForm.reset();\n  for (let i = 0; i < amountValue; i += 1) {\n    position = i + 1;\n    delay += delayStep;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$promisesForm","document","querySelector","$47d4ff9957288465$var$firstDelayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","delayStep","amountValue","position1","reset","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b994a717.js.map"}